#!/usr/bin/env python3
import chromadb
import time
import logging

# Configure logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# Wait for ChromaDB to start
time.sleep(10)

# Initialize ChromaDB client
client = chromadb.Client(chromadb.Settings(
    chroma_api_impl="rest",
    chroma_server_host="chromadb",
    chroma_server_http_port=8000
))

# Create collection
try:
    collection = client.get_or_create_collection(name="legal-docs")
    logger.info("Collection 'legal-docs' created or already exists")
except Exception as e:
    logger.error(f"Error creating collection: {str(e)}")
    exit(1)

# Sample documents and embeddings
documents = [
    "This Sample Contract is entered into by and between the parties for the purpose of demonstrating a RAG workflow.",
    "The Provider agrees to provide vector database access via ChromaDB.",
    "The Provider agrees to provide object storage access via MinIO.",
    "All information shared between the parties shall be considered confidential.",
    "Either party may terminate this Contract with 30 days written notice.",
    "This Contract shall be governed by the laws of the jurisdiction in which the Provider is located."
]

# Simple mock embeddings (in a real scenario, these would be generated by an embedding model)
# Each embedding is a 10-dimensional vector of random values between 0 and 1
mock_embeddings = [
    [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
    [0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 0.1],
    [0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 0.1, 0.2],
    [0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 0.1, 0.2, 0.3],
    [0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 0.1, 0.2, 0.3, 0.4],
    [0.6, 0.7, 0.8, 0.9, 1.0, 0.1, 0.2, 0.3, 0.4, 0.5]
]

# IDs for the documents
ids = [f"doc_{i}" for i in range(len(documents))]

# Add documents to collection
try:
    collection.add(
        embeddings=mock_embeddings,
        documents=documents,
        ids=ids,
        metadatas=[{"source": "sample-contract.txt", "section": f"section_{i}"} for i in range(len(documents))]
    )
    logger.info(f"Added {len(documents)} documents to collection 'legal-docs'")
except Exception as e:
    logger.error(f"Error adding documents: {str(e)}")
    exit(1)

# Test query
try:
    results = collection.query(
        query_embeddings=[0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],
        n_results=2
    )
    logger.info(f"Query test successful: {results}")
except Exception as e:
    logger.error(f"Error querying collection: {str(e)}")
    exit(1)

logger.info("ChromaDB initialization complete")